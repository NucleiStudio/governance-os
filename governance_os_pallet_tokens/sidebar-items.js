initSidebarItems({"enum":[["Call","Dispatchable calls."],["Error",""],["RawEvent","Events for this module."]],"struct":[["AccountCurrencyData","All balance information for an account and an associated currency."],["Balances","Store the balances holded by an account. By storing the balances under an account (VS storing the accounts under the currency ids) we can enumerate the tokens holded by an account if needed."],["CurrencyDetails","This structure is used to encode metadata about a currency, for instance, which account is its \"owner\" and thus can mint or burn units."],["GenesisConfig","Genesis config for the module, allow to build genesis storage."],["Locks",""],["Module",""],["NativeCurrencyAdapter","This struct is useful to implement the `Currency` trait for any given currency inside the system. It basically takes an interface to the `tokens` pallet and a `CurrencyId` to expose them under the `Currency` trait."],["NegativeImbalance","Opaque, move-only struct with private fields that serves as a token denoting that funds have been destroyed without any equal and opposite accounting."],["PositiveImbalance","Opaque, move-only struct with private fields that serves as a token denoting that funds have been created without any equal and opposite accounting."],["TotalIssuances",""]],"trait":[["RoleBuilder",""],["Trait",""],["WeightInfo",""]],"type":[["Event","`RawEvent` specialized for the configuration `Trait`"]]});
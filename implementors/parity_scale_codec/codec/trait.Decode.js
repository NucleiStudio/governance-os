(function() {var implementors = {};
implementors["finality_grandpa"] = [{"text":"impl&lt;H, N&gt; Decode for State&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(H, N)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(H, N)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(H, N)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(H, N)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(H, N)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(H, N)&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N&gt; Decode for Prevote&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N&gt; Decode for Precommit&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N&gt; Decode for PrimaryPropose&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Id, V, S&gt; Decode for Equivocation&lt;Id, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;(V, S): Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;(V, S): Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N&gt; Decode for Message&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Prevote&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prevote&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Precommit&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Precommit&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PrimaryPropose&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PrimaryPropose&lt;H, N&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for SignedMessage&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Message&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Message&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for Commit&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedPrecommit&lt;H, N, S, Id&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedPrecommit&lt;H, N, S, Id&gt;&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for SignedPrevote&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Prevote&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Prevote&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for SignedPrecommit&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Precommit&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Precommit&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for CompactCommit&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Precommit&lt;H, N&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Precommit&lt;H, N&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;MultiAuthData&lt;S, Id&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;MultiAuthData&lt;S, Id&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for CatchUp&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedPrevote&lt;H, N, S, Id&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedPrevote&lt;H, N, S, Id&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedPrecommit&lt;H, N, S, Id&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedPrecommit&lt;H, N, S, Id&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N, S, Id&gt; Decode for HistoricalVotes&lt;H, N, S, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedMessage&lt;H, N, S, Id&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;SignedMessage&lt;H, N, S, Id&gt;&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["fork_tree"] = [{"text":"impl&lt;H, N, V&gt; Decode for ForkTree&lt;H, N, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Node&lt;H, N, V&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Node&lt;H, N, V&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;N&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["frame_benchmarking"] = [{"text":"impl Decode for BenchmarkParameter","synthetic":false,"types":[]},{"text":"impl Decode for BenchmarkBatch","synthetic":false,"types":[]},{"text":"impl Decode for BenchmarkResults","synthetic":false,"types":[]},{"text":"impl Decode for BenchmarkConfig","synthetic":false,"types":[]}];
implementors["frame_metadata"] = [{"text":"impl&lt;B, O&gt; Decode for DecodeDifferent&lt;B, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Decode + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for FunctionMetadata","synthetic":false,"types":[]},{"text":"impl Decode for FunctionArgumentMetadata","synthetic":false,"types":[]},{"text":"impl Decode for OuterEventMetadata","synthetic":false,"types":[]},{"text":"impl Decode for EventMetadata","synthetic":false,"types":[]},{"text":"impl Decode for StorageEntryMetadata","synthetic":false,"types":[]},{"text":"impl Decode for ModuleConstantMetadata","synthetic":false,"types":[]},{"text":"impl Decode for ErrorMetadata","synthetic":false,"types":[]},{"text":"impl Decode for StorageHasher","synthetic":false,"types":[]},{"text":"impl Decode for StorageEntryType","synthetic":false,"types":[]},{"text":"impl Decode for StorageEntryModifier","synthetic":false,"types":[]},{"text":"impl Decode for StorageMetadata","synthetic":false,"types":[]},{"text":"impl Decode for RuntimeMetadataPrefixed","synthetic":false,"types":[]},{"text":"impl Decode for ExtrinsicMetadata","synthetic":false,"types":[]},{"text":"impl Decode for RuntimeMetadata","synthetic":false,"types":[]},{"text":"impl Decode for RuntimeMetadataDeprecated","synthetic":false,"types":[]},{"text":"impl Decode for RuntimeMetadataV12","synthetic":false,"types":[]},{"text":"impl Decode for ModuleMetadata","synthetic":false,"types":[]}];
implementors["frame_system"] = [{"text":"impl&lt;T:&nbsp;Trait + Send + Sync&gt; Decode for CheckGenesis&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait + Send + Sync&gt; Decode for CheckMortality&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for CheckNonce&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Index: HasCompact,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait + Send + Sync&gt; Decode for CheckSpecVersion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait + Send + Sync&gt; Decode for CheckTxVersion&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait + Send + Sync&gt; Decode for CheckWeight&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;T&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for Phase","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Parameter + Member, T&gt; Decode for EventRecord&lt;E, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;T&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;T&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;AccountId&gt; Decode for RawOrigin&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Index, AccountData&gt; Decode for AccountInfo&lt;Index, AccountData&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Index: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Index: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountData: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountData: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for LastRuntimeUpgradeInfo","synthetic":false,"types":[]},{"text":"impl&lt;AccountId&gt; Decode for RawEvent&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["governance_os_pallet_bylaws"] = [{"text":"impl&lt;AccountId, Role&gt; Decode for RawEvent&lt;AccountId, Role&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Role: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Role: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Role: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Role: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;&lt;T::Lookup as StaticLookup&gt;::Source&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;&lt;T::Lookup as StaticLookup&gt;::Source&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Role: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Role: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;&lt;T::Lookup as StaticLookup&gt;::Source&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;&lt;T::Lookup as StaticLookup&gt;::Source&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Role: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Role: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["governance_os_pallet_compat"] = [{"text":"impl Decode for Event","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["governance_os_pallet_organizations"] = [{"text":"impl&lt;AccountId, VotingSystem&gt; Decode for OrganizationDetails&lt;AccountId, VotingSystem&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;VotingSystem: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;VotingSystem: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Call, Metadata, OrganizationId, VotingSystem&gt; Decode for Proposal&lt;Call, Metadata, OrganizationId, VotingSystem&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Call: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Call: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Metadata: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Metadata: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;VotingSystem: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;VotingSystem: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;AccountId, OrganizationDetails, ProposalId, Balance&gt; Decode for RawEvent&lt;AccountId, OrganizationDetails, ProposalId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ProposalId: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::VotingSystem&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::VotingSystem&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::VotingSystem&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;OrganizationDetails&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::VotingSystem&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;&lt;T as Trait&gt;::Call&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Trait&gt;::Currencies as Currencies&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Trait&gt;::Currencies as Currencies&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["governance_os_pallet_tokens"] = [{"text":"impl&lt;Balance&gt; Decode for AccountCurrencyData&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;AccountId&gt; Decode for CurrencyDetails&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;AccountId, Balance, CurrencyId, CurrencyDetails&gt; Decode for RawEvent&lt;AccountId, Balance, CurrencyId, CurrencyDetails&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyDetails: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyDetails&lt;T::AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyDetails&lt;T::AccountId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Lookup as StaticLookup&gt;::Source: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Balance: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["governance_os_primitives"] = [{"text":"impl Decode for CurrencyId","synthetic":false,"types":[]},{"text":"impl Decode for Role","synthetic":false,"types":[]}];
implementors["governance_os_runtime"] = [{"text":"impl Decode for SessionKeys","synthetic":false,"types":[]},{"text":"impl Decode for Event","synthetic":false,"types":[]},{"text":"impl Decode for OriginCaller","synthetic":false,"types":[]},{"text":"impl Decode for Call","synthetic":false,"types":[]}];
implementors["governance_os_voting"] = [{"text":"impl&lt;AccountId, Balance, BlockNumber&gt; Decode for ProposalMetadata&lt;AccountId, Balance, BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Ord,<br>&nbsp;&nbsp;&nbsp;&nbsp;BTreeMap&lt;AccountId, (Balance, bool)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;BTreeMap&lt;AccountId, (Balance, bool)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Default, CurrencyId:&nbsp;Default, BlockNumber:&nbsp;Default, Currencies, AccountId&gt; Decode for VotingSystems&lt;Balance, CurrencyId, BlockNumber, Currencies, AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CoinBasedVotingParameters&lt;Balance, CurrencyId, BlockNumber&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CoinBasedVotingParameters&lt;Balance, CurrencyId, BlockNumber&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;(AccountId, Currencies)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;PhantomData&lt;(AccountId, Currencies)&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Default, CurrencyId:&nbsp;Default, BlockNumber:&nbsp;Default&gt; Decode for CoinBasedVotingParameters&lt;Balance, CurrencyId, BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;CurrencyId: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_aura"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_authorship"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;T::Header&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;T::Header&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_finality_tracker"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: HasCompact,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_grandpa"] = [{"text":"impl Decode for GrandpaTimeSlot","synthetic":false,"types":[]},{"text":"impl&lt;N&gt; Decode for OldStoredPendingChange&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Decode&gt; Decode for StoredPendingChange&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;N&gt; Decode for StoredState&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for Event","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;EquivocationProof&lt;T::Hash, T::BlockNumber&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;EquivocationProof&lt;T::Hash, T::BlockNumber&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::KeyOwnerProof: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::KeyOwnerProof: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;EquivocationProof&lt;T::Hash, T::BlockNumber&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;EquivocationProof&lt;T::Hash, T::BlockNumber&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::KeyOwnerProof: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::KeyOwnerProof: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::BlockNumber: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_randomness_collective_flip"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_session"] = [{"text":"impl Decode for Event","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Keys: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Keys: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_timestamp"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::Moment: HasCompact,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_transaction_payment"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Decode for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait + Send + Sync&gt; Decode for ChargeTransactionPayment&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance: HasCompact,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["pallet_transaction_payment_rpc_runtime_api"] = [{"text":"impl&lt;Balance&gt; Decode for RuntimeDispatchInfo&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["primitive_types"] = [{"text":"impl Decode for U128","synthetic":false,"types":[]},{"text":"impl Decode for U256","synthetic":false,"types":[]},{"text":"impl Decode for U512","synthetic":false,"types":[]},{"text":"impl Decode for H128","synthetic":false,"types":[]},{"text":"impl Decode for H160","synthetic":false,"types":[]},{"text":"impl Decode for H256","synthetic":false,"types":[]},{"text":"impl Decode for H512","synthetic":false,"types":[]}];
implementors["sc_consensus_slots"] = [{"text":"impl&lt;T&gt; Decode for SlotDuration&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sc_finality_grandpa"] = [{"text":"impl&lt;Header:&nbsp;HeaderT&gt; Decode for FinalityProofFragment&lt;Header&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Header::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header::Hash: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Header&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Header&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Block:&nbsp;BlockT&gt; Decode for GrandpaJustification&lt;Block&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Commit&lt;Block&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Commit&lt;Block&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Block::Header&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Block::Header&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sp_api"] = [{"text":"impl Decode for OldRuntimeVersion","synthetic":false,"types":[]}];
implementors["sp_application_crypto"] = [{"text":"impl Decode for Public","synthetic":false,"types":[]},{"text":"impl Decode for Signature","synthetic":false,"types":[]},{"text":"impl Decode for Public","synthetic":false,"types":[]},{"text":"impl Decode for Signature","synthetic":false,"types":[]},{"text":"impl Decode for Public","synthetic":false,"types":[]},{"text":"impl Decode for Signature","synthetic":false,"types":[]}];
implementors["sp_arithmetic"] = [{"text":"impl Decode for Percent","synthetic":false,"types":[]},{"text":"impl Decode for PerU16","synthetic":false,"types":[]},{"text":"impl Decode for Permill","synthetic":false,"types":[]},{"text":"impl Decode for Perbill","synthetic":false,"types":[]},{"text":"impl Decode for Perquintill","synthetic":false,"types":[]},{"text":"impl Decode for FixedI64","synthetic":false,"types":[]},{"text":"impl Decode for FixedI128","synthetic":false,"types":[]},{"text":"impl Decode for FixedU128","synthetic":false,"types":[]}];
implementors["sp_authorship"] = [{"text":"impl Decode for InherentError","synthetic":false,"types":[]}];
implementors["sp_consensus_aura"] = [{"text":"impl&lt;AuthorityId:&nbsp;Codec&gt; Decode for ConsensusLog&lt;AuthorityId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;AuthorityId&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;AuthorityId&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sp_consensus_slots"] = [{"text":"impl&lt;Header, Id&gt; Decode for EquivocationProof&lt;Header, Id&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Id: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sp_core"] = [{"text":"impl Decode for DeriveJunction","synthetic":false,"types":[]},{"text":"impl Decode for AccountId32","synthetic":false,"types":[]},{"text":"impl Decode for KeyTypeId","synthetic":false,"types":[]},{"text":"impl Decode for CryptoTypeId","synthetic":false,"types":[]},{"text":"impl Decode for CryptoTypePublicPair","synthetic":false,"types":[]},{"text":"impl Decode for Public","synthetic":false,"types":[]},{"text":"impl Decode for Signature","synthetic":false,"types":[]},{"text":"impl Decode for LocalizedSignature","synthetic":false,"types":[]},{"text":"impl Decode for Public","synthetic":false,"types":[]},{"text":"impl Decode for Signature","synthetic":false,"types":[]},{"text":"impl Decode for Public","synthetic":false,"types":[]},{"text":"impl Decode for Signature","synthetic":false,"types":[]},{"text":"impl Decode for StorageKind","synthetic":false,"types":[]},{"text":"impl Decode for HttpRequestId","synthetic":false,"types":[]},{"text":"impl Decode for HttpError","synthetic":false,"types":[]},{"text":"impl Decode for HttpRequestStatus","synthetic":false,"types":[]},{"text":"impl Decode for OpaqueNetworkState","synthetic":false,"types":[]},{"text":"impl Decode for OpaqueMultiaddr","synthetic":false,"types":[]},{"text":"impl Decode for Timestamp","synthetic":false,"types":[]},{"text":"impl Decode for Duration","synthetic":false,"types":[]},{"text":"impl Decode for HostError","synthetic":false,"types":[]},{"text":"impl Decode for ExternEntity","synthetic":false,"types":[]},{"text":"impl Decode for Entry","synthetic":false,"types":[]},{"text":"impl Decode for EnvironmentDefinition","synthetic":false,"types":[]},{"text":"impl Decode for ChangesTrieConfiguration","synthetic":false,"types":[]},{"text":"impl Decode for OpaqueMetadata","synthetic":false,"types":[]},{"text":"impl Decode for OpaquePeerId","synthetic":false,"types":[]},{"text":"impl Decode for NeverNativeValue","synthetic":false,"types":[]},{"text":"impl Decode for LogLevel","synthetic":false,"types":[]},{"text":"impl Decode for Void","synthetic":false,"types":[]}];
implementors["sp_finality_grandpa"] = [{"text":"impl&lt;N&gt; Decode for ScheduledChange&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Codec&gt; Decode for ConsensusLog&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ScheduledChange&lt;N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ScheduledChange&lt;N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ScheduledChange&lt;N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;ScheduledChange&lt;N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N&gt; Decode for EquivocationProof&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Equivocation&lt;H, N&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Equivocation&lt;H, N&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H, N&gt; Decode for Equivocation&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Equivocation&lt;AuthorityId, Prevote&lt;H, N&gt;, AuthoritySignature&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Equivocation&lt;AuthorityId, Prevote&lt;H, N&gt;, AuthoritySignature&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Equivocation&lt;AuthorityId, Precommit&lt;H, N&gt;, AuthoritySignature&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Equivocation&lt;AuthorityId, Precommit&lt;H, N&gt;, AuthoritySignature&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Decode for VersionedAuthorityList&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Decode for OpaqueKeyOwnershipProof","synthetic":false,"types":[]}];
implementors["sp_inherents"] = [{"text":"impl Decode for Error","synthetic":false,"types":[]},{"text":"impl Decode for InherentData","synthetic":false,"types":[]},{"text":"impl Decode for CheckInherentsResult","synthetic":false,"types":[]}];
implementors["sp_io"] = [{"text":"impl Decode for EcdsaVerifyError","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Encode + Decode&gt; Decode for Crossing&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sp_runtime"] = [{"text":"impl&lt;Address, Call, Signature, Extra&gt; Decode for UncheckedExtrinsic&lt;Address, Call, Signature, Extra&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Address: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Signature: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Call: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Extra: SignedExtension,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for Era","synthetic":false,"types":[]},{"text":"impl&lt;Number, Hash&gt; Decode for Header&lt;Number, Hash&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Number: HasCompact + Copy + Into&lt;U256&gt; + TryFrom&lt;U256&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;Hash: HashT,<br>&nbsp;&nbsp;&nbsp;&nbsp;Hash::Output: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Header, Extrinsic:&nbsp;MaybeSerialize&gt; Decode for Block&lt;Header, Extrinsic&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Header: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Extrinsic&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Extrinsic&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Block&gt; Decode for SignedBlock&lt;Block&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Block: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Block: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Hash&gt; Decode for Digest&lt;Hash&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;DigestItem&lt;Hash&gt;&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;DigestItem&lt;Hash&gt;&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for ChangesTrieSignal","synthetic":false,"types":[]},{"text":"impl&lt;Hash:&nbsp;Decode&gt; Decode for DigestItem&lt;Hash&gt;","synthetic":false,"types":[]},{"text":"impl Decode for Time","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;BlockNumberProvider&gt; Decode for BlockAndTimeDeadline&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as BlockNumberProvider&gt;::BlockNumber: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as BlockNumberProvider&gt;::BlockNumber: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for UintAuthorityId","synthetic":false,"types":[]},{"text":"impl Decode for TestSignature","synthetic":false,"types":[]},{"text":"impl&lt;Xt&gt; Decode for ExtrinsicWrapper&lt;Xt&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Xt: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Xt: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Xt&gt; Decode for Block&lt;Xt&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Xt&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Xt&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Call, Extra&gt; Decode for TestXt&lt;Call, Extra&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(u64, Extra)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;(u64, Extra)&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Call: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Call: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for BadOrigin","synthetic":false,"types":[]},{"text":"impl Decode for LookupError","synthetic":false,"types":[]},{"text":"impl Decode for InvalidTransaction","synthetic":false,"types":[]},{"text":"impl Decode for UnknownTransaction","synthetic":false,"types":[]},{"text":"impl Decode for TransactionValidityError","synthetic":false,"types":[]},{"text":"impl Decode for TransactionSource","synthetic":false,"types":[]},{"text":"impl Decode for ValidTransaction","synthetic":false,"types":[]},{"text":"impl&lt;Hashing:&nbsp;Hash&gt; Decode for RandomNumberGenerator&lt;Hashing&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Hashing::Output: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Hashing::Output: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for RuntimeString","synthetic":false,"types":[]},{"text":"impl Decode for ModuleId","synthetic":false,"types":[]},{"text":"impl Decode for MultiSignature","synthetic":false,"types":[]},{"text":"impl Decode for MultiSigner","synthetic":false,"types":[]},{"text":"impl Decode for AnySignature","synthetic":false,"types":[]},{"text":"impl Decode for DispatchError","synthetic":false,"types":[]},{"text":"impl&lt;Info&gt; Decode for DispatchErrorWithPostInfo&lt;Info&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Info: Eq + PartialEq + Clone + Copy + Encode + Decode + Printable,<br>&nbsp;&nbsp;&nbsp;&nbsp;Info: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Info: Decode,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Decode for OpaqueExtrinsic","synthetic":false,"types":[]}];
implementors["sp_session"] = [{"text":"impl Decode for MembershipProof","synthetic":false,"types":[]}];
implementors["sp_staking"] = [{"text":"impl&lt;Reporter, Offender&gt; Decode for OffenceDetails&lt;Reporter, Offender&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Offender: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Offender: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Reporter&gt;: Decode,<br>&nbsp;&nbsp;&nbsp;&nbsp;Vec&lt;Reporter&gt;: Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sp_storage"] = [{"text":"impl Decode for TrackedStorageKey","synthetic":false,"types":[]}];
implementors["sp_timestamp"] = [{"text":"impl Decode for InherentError","synthetic":false,"types":[]}];
implementors["sp_tracing"] = [{"text":"impl Decode for WasmLevel","synthetic":false,"types":[]},{"text":"impl Decode for WasmValue","synthetic":false,"types":[]},{"text":"impl Decode for WasmFieldName","synthetic":false,"types":[]},{"text":"impl Decode for WasmFields","synthetic":false,"types":[]},{"text":"impl Decode for WasmValuesSet","synthetic":false,"types":[]},{"text":"impl Decode for WasmMetadata","synthetic":false,"types":[]},{"text":"impl Decode for WasmEntryAttributes","synthetic":false,"types":[]}];
implementors["sp_trie"] = [{"text":"impl Decode for StorageProof","synthetic":false,"types":[]}];
implementors["sp_version"] = [{"text":"impl Decode for RuntimeVersion","synthetic":false,"types":[]}];
implementors["sp_wasm_interface"] = [{"text":"impl Decode for Value","synthetic":false,"types":[]},{"text":"impl Decode for ReturnValue","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
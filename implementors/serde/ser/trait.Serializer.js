(function() {var implementors = {};
implementors["bincode"] = [{"text":"impl&lt;'a, W:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>, O:&nbsp;<a class=\"trait\" href=\"bincode/config/trait.Options.html\" title=\"trait bincode::config::Options\">Options</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut <a class=\"struct\" href=\"bincode/struct.Serializer.html\" title=\"struct bincode::Serializer\">Serializer</a>&lt;W, O&gt;","synthetic":false,"types":["bincode::ser::Serializer"]}];
implementors["erased_serde"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut dyn <a class=\"trait\" href=\"erased_serde/trait.Serializer.html\" title=\"trait erased_serde::Serializer\">Serializer</a>","synthetic":false,"types":["erased_serde::ser::Serializer"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut (dyn <a class=\"trait\" href=\"erased_serde/trait.Serializer.html\" title=\"trait erased_serde::Serializer\">Serializer</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>)","synthetic":false,"types":["erased_serde::ser::Serializer"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut (dyn <a class=\"trait\" href=\"erased_serde/trait.Serializer.html\" title=\"trait erased_serde::Serializer\">Serializer</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>)","synthetic":false,"types":["erased_serde::ser::Serializer"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut (dyn <a class=\"trait\" href=\"erased_serde/trait.Serializer.html\" title=\"trait erased_serde::Serializer\">Serializer</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>)","synthetic":false,"types":["erased_serde::ser::Serializer"]}];
implementors["serde_json"] = [{"text":"impl&lt;'a, W, F&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'a mut <a class=\"struct\" href=\"serde_json/struct.Serializer.html\" title=\"struct serde_json::Serializer\">Serializer</a>&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"serde_json/ser/trait.Formatter.html\" title=\"trait serde_json::ser::Formatter\">Formatter</a>,&nbsp;</span>","synthetic":false,"types":["serde_json::ser::Serializer"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for <a class=\"struct\" href=\"serde_json/value/struct.Serializer.html\" title=\"struct serde_json::value::Serializer\">Serializer</a>","synthetic":false,"types":["serde_json::value::ser::Serializer"]}];
implementors["toml"] = [{"text":"impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a> for &amp;'b mut <a class=\"struct\" href=\"toml/ser/struct.Serializer.html\" title=\"struct toml::ser::Serializer\">Serializer</a>&lt;'a&gt;","synthetic":false,"types":["toml::ser::Serializer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
(function() {var implementors = {};
implementors["governance_os_runtime"] = [{"text":"impl&lt;__SR_API_BLOCK__:&nbsp;BlockT + UnwindSafe + RefUnwindSafe, RuntimeApiImplCall:&nbsp;CallApiAt&lt;__SR_API_BLOCK__&gt; + 'static&gt; GrandpaApi&lt;__SR_API_BLOCK__&gt; for RuntimeApiImpl&lt;__SR_API_BLOCK__, RuntimeApiImplCall&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RuntimeApiImplCall::StateBackend: StateBackend&lt;HashFor&lt;__SR_API_BLOCK__&gt;&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;GrandpaAuthorityList: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;EquivocationProof&lt;&lt;__SR_API_BLOCK__ as BlockT&gt;::Hash, NumberFor&lt;__SR_API_BLOCK__&gt;&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;OpaqueKeyOwnershipProof: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;()&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;SetId: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;GrandpaId: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Option&lt;OpaqueKeyOwnershipProof&gt;: UnwindSafe + RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__SR_API_BLOCK__::Header: UnwindSafe + RefUnwindSafe,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
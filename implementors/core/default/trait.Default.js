(function() {var implementors = {};
implementors["adler"] = [{"text":"impl Default for Adler32","synthetic":false,"types":[]}];
implementors["ahash"] = [{"text":"impl Default for AHasher","synthetic":false,"types":[]},{"text":"impl Default for ABuildHasher","synthetic":false,"types":[]}];
implementors["aho_corasick"] = [{"text":"impl Default for AhoCorasickBuilder","synthetic":false,"types":[]},{"text":"impl Default for MatchKind","synthetic":false,"types":[]},{"text":"impl Default for MatchKind","synthetic":false,"types":[]},{"text":"impl Default for Config","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]}];
implementors["ansi_term"] = [{"text":"impl Default for Style","synthetic":false,"types":[]}];
implementors["anyhow"] = [{"text":"impl&lt;'_&gt; Default for Chain&lt;'_&gt;","synthetic":false,"types":[]}];
implementors["approx"] = [{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for AbsDiff&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: AbsDiffEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for Relative&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: RelativeEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized, B&gt; Default for Ulps&lt;A, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: UlpsEq&lt;B&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: ?Sized,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["arc_swap"] = [{"text":"impl Default for Shard","synthetic":false,"types":[]},{"text":"impl Default for Global","synthetic":false,"types":[]},{"text":"impl Default for PrivateUnsharded","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Default&gt; Default for PrivateSharded&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;RefCnt + Default, S:&nbsp;LockStorage&gt; Default for ArcSwapAny&lt;T, S&gt;","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A:&nbsp;Array&lt;Item = u8&gt;&gt; Default for ArrayString&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Default for ArrayVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["async_executor"] = [{"text":"impl&lt;'a&gt; Default for Executor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for LocalExecutor&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["async_global_executor"] = [{"text":"impl Default for GlobalExecutorConfig","synthetic":false,"types":[]}];
implementors["async_mutex"] = [{"text":"impl&lt;T:&nbsp;Default + ?Sized&gt; Default for Mutex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["async_std"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Cursor&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Default&gt; Default for RwLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Condvar","synthetic":false,"types":[]},{"text":"impl Default for DirBuilder","synthetic":false,"types":[]},{"text":"impl Default for OpenOptions","synthetic":false,"types":[]},{"text":"impl Default for PathBuf","synthetic":false,"types":[]}];
implementors["async_tls"] = [{"text":"impl Default for TlsConnector","synthetic":false,"types":[]}];
implementors["atomic"] = [{"text":"impl&lt;T:&nbsp;Copy + Default&gt; Default for Atomic&lt;T&gt;","synthetic":false,"types":[]}];
implementors["atomic_waker"] = [{"text":"impl Default for AtomicWaker","synthetic":false,"types":[]}];
implementors["backtrace"] = [{"text":"impl Default for Backtrace","synthetic":false,"types":[]}];
implementors["bincode"] = [{"text":"impl Default for DefaultOptions","synthetic":false,"types":[]}];
implementors["bip39"] = [{"text":"impl Default for MnemonicType","synthetic":false,"types":[]},{"text":"impl Default for Language","synthetic":false,"types":[]}];
implementors["bitvec"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for BitIdx&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for BitPos&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for BitMask&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, O, T&gt; Default for &amp;'a BitSlice&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, O, T&gt; Default for &amp;'a mut BitSlice&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T&gt; Default for BitBox&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T&gt; Default for BitVec&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["blake2"] = [{"text":"impl Default for VarBlake2b","synthetic":false,"types":[]},{"text":"impl Default for Blake2b","synthetic":false,"types":[]},{"text":"impl Default for VarBlake2s","synthetic":false,"types":[]},{"text":"impl Default for Blake2s","synthetic":false,"types":[]}];
implementors["blake2b_simd"] = [{"text":"impl Default for Params","synthetic":false,"types":[]},{"text":"impl Default for State","synthetic":false,"types":[]},{"text":"impl Default for Params","synthetic":false,"types":[]},{"text":"impl Default for State","synthetic":false,"types":[]}];
implementors["blake2s_simd"] = [{"text":"impl Default for Params","synthetic":false,"types":[]},{"text":"impl Default for State","synthetic":false,"types":[]},{"text":"impl Default for Params","synthetic":false,"types":[]},{"text":"impl Default for State","synthetic":false,"types":[]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize:&nbsp;Default + ArrayLength&lt;u8&gt;&gt; Default for BlockBuffer&lt;BlockSize&gt;","synthetic":false,"types":[]}];
implementors["bstr"] = [{"text":"impl Default for BString","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for &amp;'a BStr","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for &amp;'a mut BStr","synthetic":false,"types":[]}];
implementors["bumpalo"] = [{"text":"impl Default for Bump","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Default for Bytes","synthetic":false,"types":[]},{"text":"impl Default for BytesMut","synthetic":false,"types":[]}];
implementors["cache_padded"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for CachePadded&lt;T&gt;","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Default for Parsed","synthetic":false,"types":[]}];
implementors["clap"] = [{"text":"impl&lt;'a, 'b&gt; Default for Arg&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'a: 'b,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ArgMatches&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Values&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for OsValues&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ArgGroup&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["cranelift_bforest"] = [{"text":"impl&lt;K, V&gt; Default for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K&gt; Default for Set&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Copy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["cranelift_codegen"] = [{"text":"impl Default for NullRelocSink","synthetic":false,"types":[]},{"text":"impl Default for NullTrapSink","synthetic":false,"types":[]},{"text":"impl Default for ConstantData","synthetic":false,"types":[]},{"text":"impl Default for ExternalName","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for DisplayFunctionAnnotations&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for VariableArgs","synthetic":false,"types":[]},{"text":"impl Default for SourceLoc","synthetic":false,"types":[]},{"text":"impl Default for Type","synthetic":false,"types":[]},{"text":"impl Default for ValueLoc","synthetic":false,"types":[]},{"text":"impl Default for ArgumentLoc","synthetic":false,"types":[]},{"text":"impl Default for Encoding","synthetic":false,"types":[]},{"text":"impl Default for PassTimes","synthetic":false,"types":[]},{"text":"impl Default for VerifierErrors","synthetic":false,"types":[]}];
implementors["cranelift_entity"] = [{"text":"impl&lt;T:&nbsp;ReservedValue&gt; Default for PackedOption&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;EntityRef + ReservedValue&gt; Default for EntityList&lt;T&gt;","synthetic":false,"types":[]}];
implementors["cranelift_frontend"] = [{"text":"impl Default for Switch","synthetic":false,"types":[]}];
implementors["crc32fast"] = [{"text":"impl Default for Hasher","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;'a&gt; Default for Select&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; Default for Injector&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T&gt; Default for Atomic&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'g, T&gt; Default for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_queue"] = [{"text":"impl&lt;T&gt; Default for SegQueue&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for AtomicCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for CachePadded&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Backoff","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for ShardedLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Default for MacError","synthetic":false,"types":[]},{"text":"impl Default for InvalidKeyLength","synthetic":false,"types":[]}];
implementors["cuckoofilter"] = [{"text":"impl Default for CuckooFilter&lt;DefaultHasher&gt;","synthetic":false,"types":[]}];
implementors["curve25519_dalek"] = [{"text":"impl Default for Scalar","synthetic":false,"types":[]},{"text":"impl Default for MontgomeryPoint","synthetic":false,"types":[]},{"text":"impl Default for CompressedEdwardsY","synthetic":false,"types":[]},{"text":"impl Default for EdwardsPoint","synthetic":false,"types":[]},{"text":"impl Default for CompressedRistretto","synthetic":false,"types":[]},{"text":"impl Default for RistrettoPoint","synthetic":false,"types":[]}];
implementors["data_encoding"] = [{"text":"impl Default for Specification","synthetic":false,"types":[]}];
implementors["digest"] = [{"text":"impl Default for InvalidOutputSize","synthetic":false,"types":[]}];
implementors["ed25519_dalek"] = [{"text":"impl Default for PublicKey","synthetic":false,"types":[]}];
implementors["env_logger"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for Target","synthetic":false,"types":[]},{"text":"impl Default for WriteStyle","synthetic":false,"types":[]},{"text":"impl Default for TimestampPrecision","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Env&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["event_listener"] = [{"text":"impl Default for Event","synthetic":false,"types":[]}];
implementors["failure"] = [{"text":"impl Default for Backtrace","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default&gt; Default for Compat&lt;E&gt;","synthetic":false,"types":[]}];
implementors["fastrand"] = [{"text":"impl Default for Rng","synthetic":false,"types":[]}];
implementors["finality_grandpa"] = [{"text":"impl&lt;H, N&gt; Default for CommitValidationResult&lt;H, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;Default, N:&nbsp;Default, S:&nbsp;Default, Id:&nbsp;Default&gt; Default for HistoricalVotes&lt;H, N, S, Id&gt;","synthetic":false,"types":[]}];
implementors["flate2"] = [{"text":"impl Default for GzHeader","synthetic":false,"types":[]},{"text":"impl Default for Compression","synthetic":false,"types":[]}];
implementors["fnv"] = [{"text":"impl Default for FnvHasher","synthetic":false,"types":[]}];
implementors["frame_benchmarking"] = [{"text":"impl Default for BenchmarkResults","synthetic":false,"types":[]},{"text":"impl Default for BenchmarkConfig","synthetic":false,"types":[]}];
implementors["frame_support"] = [{"text":"impl Default for CallMetadata","synthetic":false,"types":[]},{"text":"impl Default for Pays","synthetic":false,"types":[]},{"text":"impl Default for DispatchClass","synthetic":false,"types":[]},{"text":"impl Default for DispatchInfo","synthetic":false,"types":[]},{"text":"impl Default for PostDispatchInfo","synthetic":false,"types":[]},{"text":"impl Default for RuntimeDbWeight","synthetic":false,"types":[]}];
implementors["frame_system"] = [{"text":"impl&lt;T:&nbsp;SigningTypes, C:&nbsp;AppCrypto&lt;T::Public, T::Signature&gt;, X&gt; Default for Signer&lt;T, C, X&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default + Trait + Send + Sync&gt; Default for CheckWeight&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Phase","synthetic":false,"types":[]},{"text":"impl&lt;Index:&nbsp;Default, AccountData:&nbsp;Default&gt; Default for AccountInfo&lt;Index, AccountData&gt;","synthetic":false,"types":[]},{"text":"impl Default for GenesisConfig","synthetic":false,"types":[]},{"text":"impl Default for InitKind","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for ChainContext&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures"] = [{"text":"impl&lt;T&gt; Default for FuturesUnordered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for FuturesOrdered&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Future,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for AtomicTask","synthetic":false,"types":[]}];
implementors["futures_executor"] = [{"text":"impl Default for LocalPool","synthetic":false,"types":[]},{"text":"impl Default for ThreadPoolBuilder","synthetic":false,"types":[]}];
implementors["futures_lite"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Cursor&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;Fut:&nbsp;Future&gt; Default for FuturesOrdered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Fut&gt; Default for FuturesUnordered&lt;Fut&gt;","synthetic":false,"types":[]},{"text":"impl&lt;St:&nbsp;Stream + Unpin&gt; Default for SelectAll&lt;St&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Cursor&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Mutex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Default, N&gt; Default for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["gimli"] = [{"text":"impl Default for LineEncoding","synthetic":false,"types":[]},{"text":"impl Default for RunTimeEndian","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]},{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugAddr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Default for BaseAddresses","synthetic":false,"types":[]},{"text":"impl Default for SectionBaseAddresses","synthetic":false,"types":[]},{"text":"impl Default for Augmentation","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for UninitializedUnwindContext&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for UnwindTableRow&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for CfaRule&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Default for Pointer","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for Dwarf&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Reader&gt; Default for RangeIter&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'input, Endian:&nbsp;Default&gt; Default for EndianSlice&lt;'input, Endian&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Endian: Endianity,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugAbbrev&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl Default for Abbreviations","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLine&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLoc&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLocLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for LocationLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugRanges&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugRngLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for RangeLists&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugStr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugStrOffsets&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugLineStr&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugInfo&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Default&gt; Default for DebugTypes&lt;R&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for Sections&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugAbbrev&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugFrame&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for EhFrame&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Default for FrameTable","synthetic":false,"types":[]},{"text":"impl Default for Dwarf","synthetic":false,"types":[]},{"text":"impl Default for FileInfo","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugLine&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugLoc&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugLocLists&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Default for LocationListTable","synthetic":false,"types":[]},{"text":"impl Default for Expression","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugRanges&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugRngLists&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Default for RangeListTable","synthetic":false,"types":[]},{"text":"impl Default for StringTable","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugStr&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Default for LineStringTable","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugLineStr&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Default for UnitTable","synthetic":false,"types":[]},{"text":"impl&lt;W:&nbsp;Default + Writer&gt; Default for DebugInfo&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Default for DebugInfoOffsets","synthetic":false,"types":[]}];
implementors["governance_os_pallet_bylaws"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Default for GenesisConfig&lt;T&gt;","synthetic":false,"types":[]}];
implementors["governance_os_pallet_coin_voting"] = [{"text":"impl&lt;BlockNumber:&nbsp;Default, CurrencyId:&nbsp;Default&gt; Default for VotingParameters&lt;BlockNumber, CurrencyId&gt;","synthetic":false,"types":[]},{"text":"impl Default for VoteCountingStrategy","synthetic":false,"types":[]}];
implementors["governance_os_pallet_conviction_voting"] = [{"text":"impl&lt;BlockNumber:&nbsp;Default, CurrencyId:&nbsp;Default&gt; Default for VotingParameters&lt;BlockNumber, CurrencyId&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Default, Balance:&nbsp;Default, BlockNumber:&nbsp;Default, CurrencyId:&nbsp;Default&gt; Default for ProposalState&lt;AccountId, Balance, BlockNumber, CurrencyId&gt;","synthetic":false,"types":[]}];
implementors["governance_os_pallet_organizations"] = [{"text":"impl&lt;AccountId:&nbsp;Default, VotingSystem:&nbsp;Default&gt; Default for OrganizationDetails&lt;AccountId, VotingSystem&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Default for GenesisConfig&lt;T&gt;","synthetic":false,"types":[]}];
implementors["governance_os_pallet_plcr_voting"] = [{"text":"impl&lt;BlockNumber:&nbsp;Default, CurrencyId:&nbsp;Default&gt; Default for VotingParameters&lt;BlockNumber, CurrencyId&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Default, Hash:&nbsp;Default&gt; Default for VoteData&lt;Balance, Hash&gt;","synthetic":false,"types":[]}];
implementors["governance_os_pallet_tokens"] = [{"text":"impl&lt;Balance:&nbsp;Default&gt; Default for AccountCurrencyData&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Default&gt; Default for CurrencyDetails&lt;AccountId&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Default for GenesisConfig&lt;T&gt;","synthetic":false,"types":[]}];
implementors["governance_os_primitives"] = [{"text":"impl Default for CurrencyId","synthetic":false,"types":[]},{"text":"impl Default for Role","synthetic":false,"types":[]}];
implementors["governance_os_runtime"] = [{"text":"impl Default for SessionKeys","synthetic":false,"types":[]}];
implementors["h2"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]}];
implementors["hash256_std_hasher"] = [{"text":"impl Default for Hash256StdHasher","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, S&gt; Default for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Default for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T&gt; Default for HeaderMap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Method","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Request&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Response&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for StatusCode","synthetic":false,"types":[]},{"text":"impl Default for Version","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for Parts","synthetic":false,"types":[]},{"text":"impl Default for Uri","synthetic":false,"types":[]},{"text":"impl Default for Extensions","synthetic":false,"types":[]}];
implementors["http_body"] = [{"text":"impl Default for SizeHint","synthetic":false,"types":[]}];
implementors["hyper"] = [{"text":"impl Default for Body","synthetic":false,"types":[]},{"text":"impl Default for Chunk","synthetic":false,"types":[]},{"text":"impl Default for Client&lt;HttpConnector, Body&gt;","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]}];
implementors["hyper_rustls"] = [{"text":"impl Default for HttpsConnector&lt;HttpConnector&gt;","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Default for Config","synthetic":false,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;K, V, S&gt; Default for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Default for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ipnet"] = [{"text":"impl Default for IpNet","synthetic":false,"types":[]},{"text":"impl Default for Ipv4Net","synthetic":false,"types":[]},{"text":"impl Default for Ipv6Net","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]}];
implementors["jsonrpc_core"] = [{"text":"impl Default for Compatibility","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Metadata&gt; Default for MetaIoHandler&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;M:&nbsp;Default + Metadata&gt; Default for IoHandler&lt;M&gt;","synthetic":false,"types":[]},{"text":"impl Default for Noop","synthetic":false,"types":[]}];
implementors["jsonrpc_pubsub"] = [{"text":"impl&lt;T:&nbsp;PubSubMetadata&gt; Default for PubSubHandler&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for NumericIdProvider","synthetic":false,"types":[]},{"text":"impl Default for RandomStringIdProvider","synthetic":false,"types":[]}];
implementors["jsonrpc_server_utils"] = [{"text":"impl Default for Separator","synthetic":false,"types":[]},{"text":"impl Default for StreamCodec","synthetic":false,"types":[]}];
implementors["kvdb"] = [{"text":"impl Default for DBTransaction","synthetic":false,"types":[]}];
implementors["kvdb_memorydb"] = [{"text":"impl Default for InMemory","synthetic":false,"types":[]}];
implementors["kvdb_rocksdb"] = [{"text":"impl Default for CompactionProfile","synthetic":false,"types":[]},{"text":"impl Default for DatabaseConfig","synthetic":false,"types":[]}];
implementors["lazycell"] = [{"text":"impl&lt;T&gt; Default for LazyCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for AtomicLazyCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["libp2p_core"] = [{"text":"impl Default for NetworkConfig","synthetic":false,"types":[]},{"text":"impl&lt;TOut&gt; Default for DummyTransport&lt;TOut&gt;","synthetic":false,"types":[]},{"text":"impl Default for MemoryTransport","synthetic":false,"types":[]}];
implementors["libp2p_deflate"] = [{"text":"impl Default for DeflateConfig","synthetic":false,"types":[]}];
implementors["libp2p_floodsub"] = [{"text":"impl Default for FloodsubProtocol","synthetic":false,"types":[]}];
implementors["libp2p_gossipsub"] = [{"text":"impl Default for GossipsubConfig","synthetic":false,"types":[]},{"text":"impl Default for GossipsubConfigBuilder","synthetic":false,"types":[]}];
implementors["libp2p_kad"] = [{"text":"impl&lt;TUserData&gt; Default for KademliaHandler&lt;TUserData&gt;","synthetic":false,"types":[]},{"text":"impl Default for KademliaHandlerConfig","synthetic":false,"types":[]},{"text":"impl Default for Distance","synthetic":false,"types":[]},{"text":"impl Default for KademliaProtocolConfig","synthetic":false,"types":[]},{"text":"impl Default for MemoryStoreConfig","synthetic":false,"types":[]},{"text":"impl Default for KademliaConfig","synthetic":false,"types":[]}];
implementors["libp2p_mplex"] = [{"text":"impl Default for MplexConfig","synthetic":false,"types":[]}];
implementors["libp2p_noise"] = [{"text":"impl Default for LegacyConfig","synthetic":false,"types":[]}];
implementors["libp2p_ping"] = [{"text":"impl Default for Ping","synthetic":false,"types":[]},{"text":"impl Default for Ping","synthetic":false,"types":[]}];
implementors["libp2p_request_response"] = [{"text":"impl Default for RequestResponseConfig","synthetic":false,"types":[]}];
implementors["libp2p_swarm"] = [{"text":"impl Default for DialPeerCondition","synthetic":false,"types":[]},{"text":"impl Default for DummyProtocolsHandler","synthetic":false,"types":[]},{"text":"impl&lt;TInbound, TOutbound, TEvent&gt; Default for OneShotHandler&lt;TInbound, TOutbound, TEvent&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TOutbound: OutboundUpgradeSend,<br>&nbsp;&nbsp;&nbsp;&nbsp;TInbound: InboundUpgradeSend + Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for OneShotHandlerConfig","synthetic":false,"types":[]},{"text":"impl Default for DummyBehaviour","synthetic":false,"types":[]}];
implementors["libp2p_tcp"] = [{"text":"impl Default for TcpConfig","synthetic":false,"types":[]}];
implementors["libp2p_yamux"] = [{"text":"impl Default for Config","synthetic":false,"types":[]}];
implementors["linked_hash_map"] = [{"text":"impl&lt;K:&nbsp;Hash + Eq, V, S:&nbsp;BuildHasher + Default&gt; Default for LinkedHashMap&lt;K, V, S&gt;","synthetic":false,"types":[]}];
implementors["linked_hash_set"] = [{"text":"impl&lt;T, S&gt; Default for LinkedHashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Eq + Hash,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: BuildHasher + Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["linregress"] = [{"text":"impl&lt;'a&gt; Default for FormulaRegressionBuilder&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for RegressionDataBuilder","synthetic":false,"types":[]},{"text":"impl Default for InvalidValueHandling","synthetic":false,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R:&nbsp;RawMutex, T:&nbsp;?Sized + Default&gt; Default for Mutex&lt;R, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawMutex, G:&nbsp;GetThreadId, T:&nbsp;?Sized + Default&gt; Default for ReentrantMutex&lt;R, G, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;RawRwLock, T:&nbsp;?Sized + Default&gt; Default for RwLock&lt;R, T&gt;","synthetic":false,"types":[]}];
implementors["memmap"] = [{"text":"impl Default for MmapOptions","synthetic":false,"types":[]}];
implementors["memory_db"] = [{"text":"impl&lt;T&gt; Default for MemCounter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for NoopTracker&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, H, KF, T, M&gt; Default for MemoryDB&lt;H, KF, T, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: KeyHasher,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: From&lt;&amp;'a [u8]&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;KF: KeyFunction&lt;H&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: MemTracker&lt;T&gt; + Default,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["miniz_oxide"] = [{"text":"impl Default for CompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for DecompressorOxide","synthetic":false,"types":[]},{"text":"impl Default for InflateState","synthetic":false,"types":[]}];
implementors["mio_extras"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for Timer&lt;T&gt;","synthetic":false,"types":[]}];
implementors["multihash"] = [{"text":"impl Default for Identity","synthetic":false,"types":[]},{"text":"impl Default for Sha1","synthetic":false,"types":[]},{"text":"impl Default for Sha2_256","synthetic":false,"types":[]},{"text":"impl Default for Sha2_512","synthetic":false,"types":[]},{"text":"impl Default for Sha3_224","synthetic":false,"types":[]},{"text":"impl Default for Sha3_256","synthetic":false,"types":[]},{"text":"impl Default for Sha3_384","synthetic":false,"types":[]},{"text":"impl Default for Sha3_512","synthetic":false,"types":[]},{"text":"impl Default for Keccak224","synthetic":false,"types":[]},{"text":"impl Default for Keccak256","synthetic":false,"types":[]},{"text":"impl Default for Keccak384","synthetic":false,"types":[]},{"text":"impl Default for Keccak512","synthetic":false,"types":[]},{"text":"impl Default for Blake2b256","synthetic":false,"types":[]},{"text":"impl Default for Blake2b512","synthetic":false,"types":[]},{"text":"impl Default for Blake2s128","synthetic":false,"types":[]},{"text":"impl Default for Blake2s256","synthetic":false,"types":[]}];
implementors["multistream_select"] = [{"text":"impl Default for Version","synthetic":false,"types":[]}];
implementors["names"] = [{"text":"impl Default for Name","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for Generator&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Default for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Default for Dqblk","synthetic":false,"types":[]},{"text":"impl Default for FdSet","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for AlgSetKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for FsFlags","synthetic":false,"types":[]}];
implementors["nohash_hasher"] = [{"text":"impl&lt;T&gt; Default for NoHashHasher&lt;T&gt;","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Default for BigInt","synthetic":false,"types":[]},{"text":"impl Default for BigUint","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Complex&lt;T&gt;","synthetic":false,"types":[]}];
implementors["object"] = [{"text":"impl Default for Endianness","synthetic":false,"types":[]},{"text":"impl Default for LittleEndian","synthetic":false,"types":[]},{"text":"impl Default for BigEndian","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for U16Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for U32Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for U64Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for I16Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for I32Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for I64Bytes&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for Bytes&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for StringTable&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for SectionTable&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, Elf:&nbsp;Default + FileHeader&gt; Default for SectionTable&lt;'data, Elf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Elf::SectionHeader: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'data, Elf:&nbsp;FileHeader&gt; Default for SymbolTable&lt;'data, Elf&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, Mach:&nbsp;MachHeader&gt; Default for SymbolTable&lt;'data, Mach&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, 'file&gt; Default for PeRelocationIterator&lt;'data, 'file&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data&gt; Default for WasmFile&lt;'data&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'data, 'file&gt; Default for WasmRelocationIterator&lt;'data, 'file&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for CompressionHeader32&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default + Endian&gt; Default for CompressionHeader64&lt;E&gt;","synthetic":false,"types":[]}];
implementors["once_cell"] = [{"text":"impl&lt;T&gt; Default for OnceCell&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for OnceCell&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_aura"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Default for GenesisConfig&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_finality_tracker"] = [{"text":"impl Default for GenesisConfig","synthetic":false,"types":[]}];
implementors["pallet_grandpa"] = [{"text":"impl&lt;I, R, O&gt; Default for EquivocationHandler&lt;I, R, O&gt;","synthetic":false,"types":[]},{"text":"impl Default for GenesisConfig","synthetic":false,"types":[]}];
implementors["pallet_session"] = [{"text":"impl&lt;T:&nbsp;Trait&gt; Default for GenesisConfig&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_timestamp"] = [{"text":"impl Default for GenesisConfig","synthetic":false,"types":[]}];
implementors["pallet_transaction_payment"] = [{"text":"impl Default for GenesisConfig","synthetic":false,"types":[]}];
implementors["pallet_transaction_payment_rpc_runtime_api"] = [{"text":"impl&lt;Balance:&nbsp;Default&gt; Default for RuntimeDispatchInfo&lt;Balance&gt;","synthetic":false,"types":[]}];
implementors["parity_wasm"] = [{"text":"impl Default for Module","synthetic":false,"types":[]},{"text":"impl Default for CustomSection","synthetic":false,"types":[]},{"text":"impl Default for TypeSection","synthetic":false,"types":[]},{"text":"impl Default for ImportSection","synthetic":false,"types":[]},{"text":"impl Default for FunctionSection","synthetic":false,"types":[]},{"text":"impl Default for TableSection","synthetic":false,"types":[]},{"text":"impl Default for MemorySection","synthetic":false,"types":[]},{"text":"impl Default for GlobalSection","synthetic":false,"types":[]},{"text":"impl Default for ExportSection","synthetic":false,"types":[]},{"text":"impl Default for CodeSection","synthetic":false,"types":[]},{"text":"impl Default for ElementSection","synthetic":false,"types":[]},{"text":"impl Default for DataSection","synthetic":false,"types":[]},{"text":"impl Default for FunctionType","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for IndexMap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for FunctionNameSubsection","synthetic":false,"types":[]},{"text":"impl Default for LocalNameSubsection","synthetic":false,"types":[]},{"text":"impl Default for FunctionDefinition","synthetic":false,"types":[]},{"text":"impl Default for TableDefinition","synthetic":false,"types":[]}];
implementors["parity_ws"] = [{"text":"impl Default for Frame","synthetic":false,"types":[]},{"text":"impl Default for Settings","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]}];
implementors["parking"] = [{"text":"impl Default for Parker","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Default for Condvar","synthetic":false,"types":[]},{"text":"impl Default for Once","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Default for UnparkResult","synthetic":false,"types":[]},{"text":"impl Default for SpinWait","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Default for vec128_storage","synthetic":false,"types":[]},{"text":"impl Default for vec256_storage","synthetic":false,"types":[]},{"text":"impl Default for vec512_storage","synthetic":false,"types":[]}];
implementors["primitive_types"] = [{"text":"impl Default for U128","synthetic":false,"types":[]},{"text":"impl Default for U256","synthetic":false,"types":[]},{"text":"impl Default for U512","synthetic":false,"types":[]},{"text":"impl Default for H128","synthetic":false,"types":[]},{"text":"impl Default for H160","synthetic":false,"types":[]},{"text":"impl Default for H256","synthetic":false,"types":[]},{"text":"impl Default for H512","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Default for TokenStream","synthetic":false,"types":[]}];
implementors["prometheus"] = [{"text":"impl Default for LabelPair","synthetic":false,"types":[]},{"text":"impl Default for Gauge","synthetic":false,"types":[]},{"text":"impl Default for Counter","synthetic":false,"types":[]},{"text":"impl Default for Quantile","synthetic":false,"types":[]},{"text":"impl Default for Summary","synthetic":false,"types":[]},{"text":"impl Default for Untyped","synthetic":false,"types":[]},{"text":"impl Default for Histogram","synthetic":false,"types":[]},{"text":"impl Default for Bucket","synthetic":false,"types":[]},{"text":"impl Default for Metric","synthetic":false,"types":[]},{"text":"impl Default for MetricType","synthetic":false,"types":[]},{"text":"impl Default for MetricFamily","synthetic":false,"types":[]},{"text":"impl Default for TextEncoder","synthetic":false,"types":[]},{"text":"impl Default for Registry","synthetic":false,"types":[]}];
implementors["pwasm_utils"] = [{"text":"impl Default for Set","synthetic":false,"types":[]},{"text":"impl Default for Module","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for RefList&lt;T&gt;","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Default for EntropyRng","synthetic":false,"types":[]},{"text":"impl Default for ThreadRng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Default for OsRng","synthetic":false,"types":[]}];
implementors["raw_cpuid"] = [{"text":"impl Default for CpuId","synthetic":false,"types":[]},{"text":"impl Default for CpuIdResult","synthetic":false,"types":[]},{"text":"impl Default for VendorInfo","synthetic":false,"types":[]},{"text":"impl Default for CacheInfoIter","synthetic":false,"types":[]},{"text":"impl Default for CacheInfoType","synthetic":false,"types":[]},{"text":"impl Default for CacheInfo","synthetic":false,"types":[]},{"text":"impl Default for ProcessorSerial","synthetic":false,"types":[]},{"text":"impl Default for FeatureInfo","synthetic":false,"types":[]},{"text":"impl Default for CacheParametersIter","synthetic":false,"types":[]},{"text":"impl Default for CacheParameter","synthetic":false,"types":[]},{"text":"impl Default for CacheType","synthetic":false,"types":[]},{"text":"impl Default for MonitorMwaitInfo","synthetic":false,"types":[]},{"text":"impl Default for ThermalPowerInfo","synthetic":false,"types":[]},{"text":"impl Default for ExtendedFeatures","synthetic":false,"types":[]},{"text":"impl Default for DirectCacheAccessInfo","synthetic":false,"types":[]},{"text":"impl Default for PerformanceMonitoringInfo","synthetic":false,"types":[]},{"text":"impl Default for ExtendedTopologyIter","synthetic":false,"types":[]},{"text":"impl Default for ExtendedTopologyLevel","synthetic":false,"types":[]},{"text":"impl Default for TopologyType","synthetic":false,"types":[]},{"text":"impl Default for ExtendedStateInfo","synthetic":false,"types":[]},{"text":"impl Default for ExtendedStateIter","synthetic":false,"types":[]},{"text":"impl Default for ExtendedState","synthetic":false,"types":[]},{"text":"impl Default for RdtMonitoringInfo","synthetic":false,"types":[]},{"text":"impl Default for L3MonitoringInfo","synthetic":false,"types":[]},{"text":"impl Default for RdtAllocationInfo","synthetic":false,"types":[]},{"text":"impl Default for L3CatInfo","synthetic":false,"types":[]},{"text":"impl Default for L2CatInfo","synthetic":false,"types":[]},{"text":"impl Default for MemBwAllocationInfo","synthetic":false,"types":[]},{"text":"impl Default for SgxInfo","synthetic":false,"types":[]},{"text":"impl Default for SgxSectionIter","synthetic":false,"types":[]},{"text":"impl Default for SgxSectionInfo","synthetic":false,"types":[]},{"text":"impl Default for EpcSection","synthetic":false,"types":[]},{"text":"impl Default for ProcessorTraceInfo","synthetic":false,"types":[]},{"text":"impl Default for TscInfo","synthetic":false,"types":[]},{"text":"impl Default for ProcessorFrequencyInfo","synthetic":false,"types":[]},{"text":"impl Default for DatIter","synthetic":false,"types":[]},{"text":"impl Default for DatInfo","synthetic":false,"types":[]},{"text":"impl Default for DatType","synthetic":false,"types":[]},{"text":"impl Default for SoCVendorInfo","synthetic":false,"types":[]},{"text":"impl Default for SoCVendorAttributesIter","synthetic":false,"types":[]},{"text":"impl Default for SoCVendorBrand","synthetic":false,"types":[]},{"text":"impl Default for ExtendedFunctionInfo","synthetic":false,"types":[]},{"text":"impl Default for L2Associativity","synthetic":false,"types":[]},{"text":"impl Default for MemoryEncryptionInfo","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Default for ThreadPoolBuilder","synthetic":false,"types":[]},{"text":"impl Default for Configuration","synthetic":false,"types":[]}];
implementors["regalloc"] = [{"text":"impl Default for BacktrackingOptions","synthetic":false,"types":[]},{"text":"impl Default for LinearScanOptions","synthetic":false,"types":[]},{"text":"impl Default for Options","synthetic":false,"types":[]}];
implementors["regex_automata"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for RegexBuilder","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Default for ParserBuilder","synthetic":false,"types":[]},{"text":"impl Default for TranslatorBuilder","synthetic":false,"types":[]},{"text":"impl Default for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Default for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Default for ParserBuilder","synthetic":false,"types":[]}];
implementors["rocksdb"] = [{"text":"impl Default for BackupEngineOptions","synthetic":false,"types":[]},{"text":"impl Default for RestoreOptions","synthetic":false,"types":[]},{"text":"impl Default for BlockBasedOptions","synthetic":false,"types":[]},{"text":"impl Default for Options","synthetic":false,"types":[]},{"text":"impl Default for FlushOptions","synthetic":false,"types":[]},{"text":"impl Default for WriteOptions","synthetic":false,"types":[]},{"text":"impl Default for ReadOptions","synthetic":false,"types":[]},{"text":"impl Default for IngestExternalFileOptions","synthetic":false,"types":[]},{"text":"impl Default for FifoCompactOptions","synthetic":false,"types":[]},{"text":"impl Default for UniversalCompactOptions","synthetic":false,"types":[]},{"text":"impl Default for CompactOptions","synthetic":false,"types":[]},{"text":"impl Default for PerfContext","synthetic":false,"types":[]},{"text":"impl Default for WriteBatch","synthetic":false,"types":[]}];
implementors["rustc_hash"] = [{"text":"impl Default for FxHasher","synthetic":false,"types":[]}];
implementors["rustls"] = [{"text":"impl Default for MessageDeframer","synthetic":false,"types":[]},{"text":"impl Default for HandshakeJoiner","synthetic":false,"types":[]},{"text":"impl Default for ClientConfig","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Default for Buffer","synthetic":false,"types":[]}];
implementors["sc_chain_spec"] = [{"text":"impl&lt;B:&nbsp;Ord, T:&nbsp;Group + Default&gt; Default for Forks&lt;B, T&gt;","synthetic":false,"types":[]}];
implementors["sc_client_api"] = [{"text":"impl Default for MemorySize","synthetic":false,"types":[]},{"text":"impl Default for StateDbMemoryInfo","synthetic":false,"types":[]},{"text":"impl Default for MemoryInfo","synthetic":false,"types":[]},{"text":"impl Default for IoInfo","synthetic":false,"types":[]},{"text":"impl Default for UsageInfo","synthetic":false,"types":[]},{"text":"impl Default for ExecutionStrategies","synthetic":false,"types":[]},{"text":"impl&lt;Block:&nbsp;Block&gt; Default for ExecutionExtensions&lt;Block&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Block:&nbsp;BlockT&gt; Default for Blockchain&lt;Block&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Header:&nbsp;Default + HeaderT&gt; Default for RemoteHeaderRequest&lt;Header&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Header::Hash: Default,<br>&nbsp;&nbsp;&nbsp;&nbsp;Header::Number: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;Header:&nbsp;Default + HeaderT&gt; Default for RemoteBodyRequest&lt;Header&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Block:&nbsp;BlockT&gt; Default for StorageNotifications&lt;Block&gt;","synthetic":false,"types":[]}];
implementors["sc_client_db"] = [{"text":"impl Default for KeyTracker","synthetic":false,"types":[]},{"text":"impl Default for ReadWriteTracker","synthetic":false,"types":[]}];
implementors["sc_consensus_slots"] = [{"text":"impl Default for SignedDuration","synthetic":false,"types":[]}];
implementors["sc_executor"] = [{"text":"impl Default for WasmExecutionMethod","synthetic":false,"types":[]}];
implementors["sc_finality_grandpa"] = [{"text":"impl&lt;Block, B&gt; Default for VotingRulesBuilder&lt;Block, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Block: BlockT,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: HeaderBackend&lt;Block&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sc_informant"] = [{"text":"impl Default for OutputFormat","synthetic":false,"types":[]}];
implementors["sc_network"] = [{"text":"impl Default for AlwaysBadChecker","synthetic":false,"types":[]},{"text":"impl Default for DummyFinalityProofRequestBuilder","synthetic":false,"types":[]},{"text":"impl Default for NodeKeyConfig","synthetic":false,"types":[]}];
implementors["sc_proposer_metrics"] = [{"text":"impl Default for MetricsLink","synthetic":false,"types":[]}];
implementors["sc_rpc_api"] = [{"text":"impl Default for Metadata","synthetic":false,"types":[]}];
implementors["sc_service"] = [{"text":"impl Default for OffchainWorkerConfig","synthetic":false,"types":[]},{"text":"impl Default for RpcMethods","synthetic":false,"types":[]},{"text":"impl Default for TelemetryConnectionSinks","synthetic":false,"types":[]}];
implementors["sc_state_db"] = [{"text":"impl&lt;H:&nbsp;Default + Hash&gt; Default for ChangeSet&lt;H&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;Default + Hash&gt; Default for CommitSet&lt;H&gt;","synthetic":false,"types":[]},{"text":"impl Default for Constraints","synthetic":false,"types":[]},{"text":"impl Default for PruningMode","synthetic":false,"types":[]}];
implementors["sc_tracing"] = [{"text":"impl Default for TracingReceiver","synthetic":false,"types":[]},{"text":"impl Default for Values","synthetic":false,"types":[]}];
implementors["sc_transaction_graph"] = [{"text":"impl Default for Options","synthetic":false,"types":[]},{"text":"impl&lt;Hash:&nbsp;Hash + Member + Serialize, Ex:&nbsp;Debug&gt; Default for BasePool&lt;Hash, Ex&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H, BH&gt; Default for Sender&lt;H, BH&gt;","synthetic":false,"types":[]}];
implementors["schnorrkel"] = [{"text":"impl Default for RistrettoBoth","synthetic":false,"types":[]},{"text":"impl Default for PublicKey","synthetic":false,"types":[]},{"text":"impl Default for VRFOutput","synthetic":false,"types":[]}];
implementors["scroll"] = [{"text":"impl Default for StrCtx","synthetic":false,"types":[]},{"text":"impl Default for Endian","synthetic":false,"types":[]}];
implementors["secp256k1"] = [{"text":"impl Default for Field","synthetic":false,"types":[]},{"text":"impl Default for Affine","synthetic":false,"types":[]},{"text":"impl Default for Jacobian","synthetic":false,"types":[]},{"text":"impl Default for AffineStorage","synthetic":false,"types":[]},{"text":"impl Default for Scalar","synthetic":false,"types":[]},{"text":"impl Default for SecretKey","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Default for IgnoredAny","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Default for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for PrettyFormatter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for Value","synthetic":false,"types":[]}];
implementors["sha1"] = [{"text":"impl Default for Sha1","synthetic":false,"types":[]}];
implementors["sha2"] = [{"text":"impl Default for Sha256","synthetic":false,"types":[]},{"text":"impl Default for Sha224","synthetic":false,"types":[]},{"text":"impl Default for Sha512","synthetic":false,"types":[]},{"text":"impl Default for Sha384","synthetic":false,"types":[]},{"text":"impl Default for Sha512Trunc256","synthetic":false,"types":[]},{"text":"impl Default for Sha512Trunc224","synthetic":false,"types":[]}];
implementors["sha3"] = [{"text":"impl Default for Keccak224","synthetic":false,"types":[]},{"text":"impl Default for Keccak256","synthetic":false,"types":[]},{"text":"impl Default for Keccak384","synthetic":false,"types":[]},{"text":"impl Default for Keccak512","synthetic":false,"types":[]},{"text":"impl Default for Keccak256Full","synthetic":false,"types":[]},{"text":"impl Default for Sha3_224","synthetic":false,"types":[]},{"text":"impl Default for Sha3_256","synthetic":false,"types":[]},{"text":"impl Default for Sha3_384","synthetic":false,"types":[]},{"text":"impl Default for Sha3_512","synthetic":false,"types":[]},{"text":"impl Default for Shake128","synthetic":false,"types":[]},{"text":"impl Default for Shake256","synthetic":false,"types":[]}];
implementors["sharded_slab"] = [{"text":"impl&lt;T&gt; Default for Pool&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clear + Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["signature"] = [{"text":"impl Default for Error","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T&gt; Default for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Default for SmallVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["snow"] = [{"text":"impl Default for DefaultResolver","synthetic":false,"types":[]},{"text":"impl Default for RingResolver","synthetic":false,"types":[]}];
implementors["soketto"] = [{"text":"impl Default for Codec","synthetic":false,"types":[]}];
implementors["sp_application_crypto"] = [{"text":"impl Default for Public","synthetic":false,"types":[]},{"text":"impl Default for Signature","synthetic":false,"types":[]},{"text":"impl Default for Public","synthetic":false,"types":[]},{"text":"impl Default for Signature","synthetic":false,"types":[]},{"text":"impl Default for Public","synthetic":false,"types":[]},{"text":"impl Default for Signature","synthetic":false,"types":[]}];
implementors["sp_arithmetic"] = [{"text":"impl Default for BigUint","synthetic":false,"types":[]},{"text":"impl Default for Percent","synthetic":false,"types":[]},{"text":"impl Default for PerU16","synthetic":false,"types":[]},{"text":"impl Default for Permill","synthetic":false,"types":[]},{"text":"impl Default for Perbill","synthetic":false,"types":[]},{"text":"impl Default for Perquintill","synthetic":false,"types":[]},{"text":"impl Default for FixedI64","synthetic":false,"types":[]},{"text":"impl Default for FixedI128","synthetic":false,"types":[]},{"text":"impl Default for FixedU128","synthetic":false,"types":[]},{"text":"impl Default for Rational128","synthetic":false,"types":[]}];
implementors["sp_blockchain"] = [{"text":"impl&lt;Block:&nbsp;BlockT&gt; Default for HeaderMetadataCache&lt;Block&gt;","synthetic":false,"types":[]}];
implementors["sp_chain_spec"] = [{"text":"impl Default for ChainType","synthetic":false,"types":[]}];
implementors["sp_consensus"] = [{"text":"impl Default for ImportedAux","synthetic":false,"types":[]}];
implementors["sp_core"] = [{"text":"impl Default for Ss58AddressFormat","synthetic":false,"types":[]},{"text":"impl Default for AccountId32","synthetic":false,"types":[]},{"text":"impl Default for Dummy","synthetic":false,"types":[]},{"text":"impl Default for KeyTypeId","synthetic":false,"types":[]},{"text":"impl Default for CryptoTypeId","synthetic":false,"types":[]},{"text":"impl Default for CryptoTypePublicPair","synthetic":false,"types":[]},{"text":"impl Default for Public","synthetic":false,"types":[]},{"text":"impl Default for Signature","synthetic":false,"types":[]},{"text":"impl Default for Public","synthetic":false,"types":[]},{"text":"impl Default for Signature","synthetic":false,"types":[]},{"text":"impl Default for Public","synthetic":false,"types":[]},{"text":"impl Default for Signature","synthetic":false,"types":[]},{"text":"impl Default for InMemOffchainStorage","synthetic":false,"types":[]},{"text":"impl Default for OffchainOverlayedChanges","synthetic":false,"types":[]},{"text":"impl Default for PendingRequest","synthetic":false,"types":[]},{"text":"impl Default for TestPersistentOffchainDB","synthetic":false,"types":[]},{"text":"impl Default for OffchainState","synthetic":false,"types":[]},{"text":"impl Default for TestOffchainExt","synthetic":false,"types":[]},{"text":"impl Default for PoolState","synthetic":false,"types":[]},{"text":"impl Default for TestTransactionPoolExt","synthetic":false,"types":[]},{"text":"impl Default for OpaqueNetworkState","synthetic":false,"types":[]},{"text":"impl Default for Timestamp","synthetic":false,"types":[]},{"text":"impl Default for Duration","synthetic":false,"types":[]},{"text":"impl Default for ChangesTrieConfiguration","synthetic":false,"types":[]},{"text":"impl Default for KeyStore","synthetic":false,"types":[]},{"text":"impl Default for OpaquePeerId","synthetic":false,"types":[]}];
implementors["sp_database"] = [{"text":"impl&lt;H:&nbsp;Default + Clone + Send + Sync + Eq + PartialEq + Hash&gt; Default for MemDb&lt;H&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;Default&gt; Default for Transaction&lt;H&gt;","synthetic":false,"types":[]}];
implementors["sp_externalities"] = [{"text":"impl Default for Extensions","synthetic":false,"types":[]}];
implementors["sp_finality_grandpa"] = [{"text":"impl&lt;'a&gt; Default for VersionedAuthorityList&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["sp_inherents"] = [{"text":"impl Default for InherentData","synthetic":false,"types":[]},{"text":"impl Default for CheckInherentsResult","synthetic":false,"types":[]},{"text":"impl Default for InherentDataProviders","synthetic":false,"types":[]}];
implementors["sp_io"] = [{"text":"impl&lt;T&gt; Default for Crossing&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default + Encode + Decode,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["sp_runtime"] = [{"text":"impl&lt;Item&gt; Default for Digest&lt;Item&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for Request&lt;'static, T&gt;","synthetic":false,"types":[]},{"text":"impl Default for Time","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;BlockNumberProvider&gt; Default for BlockAndTimeDeadline&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl&lt;B:&nbsp;BlockNumberProvider&gt; Default for BlockAndTime&lt;B&gt;","synthetic":false,"types":[]},{"text":"impl Default for UintAuthorityId","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Default&gt; Default for IdentityLookup&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Default for ValidTransaction","synthetic":false,"types":[]},{"text":"impl Default for ValidTransactionBuilder","synthetic":false,"types":[]},{"text":"impl Default for RuntimeString","synthetic":false,"types":[]},{"text":"impl Default for MultiSignature","synthetic":false,"types":[]},{"text":"impl Default for MultiSigner","synthetic":false,"types":[]},{"text":"impl Default for AnySignature","synthetic":false,"types":[]},{"text":"impl Default for OpaqueExtrinsic","synthetic":false,"types":[]}];
implementors["sp_session"] = [{"text":"impl Default for MembershipProof","synthetic":false,"types":[]}];
implementors["sp_state_machine"] = [{"text":"impl&lt;H:&nbsp;Hasher&gt; Default for TrieBackend&lt;MemoryDB&lt;H&gt;, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H::Out: Codec + Ord,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;Hasher, N:&nbsp;ChangesTrieBlockNumber&gt; Default for TestExternalities&lt;H, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H::Out: Ord + 'static + Codec,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for BasicExternalities","synthetic":false,"types":[]},{"text":"impl Default for OverlayedChanges","synthetic":false,"types":[]},{"text":"impl&lt;Transaction, H:&nbsp;Hasher, N:&nbsp;BlockNumber&gt; Default for StorageTransactionCache&lt;Transaction, H, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Transaction:&nbsp;Default, H:&nbsp;Hasher, N:&nbsp;BlockNumber&gt; Default for StorageChanges&lt;Transaction, H, N&gt;","synthetic":false,"types":[]},{"text":"impl Default for UsageUnit","synthetic":false,"types":[]},{"text":"impl Default for StateMachineStats","synthetic":false,"types":[]}];
implementors["sp_storage"] = [{"text":"impl Default for Storage","synthetic":false,"types":[]}];
implementors["sp_tracing"] = [{"text":"impl Default for WasmLevel","synthetic":false,"types":[]},{"text":"impl Default for WasmMetadata","synthetic":false,"types":[]},{"text":"impl Default for WasmEntryAttributes","synthetic":false,"types":[]}];
implementors["sp_trie"] = [{"text":"impl&lt;H:&nbsp;Default&gt; Default for NodeCodec&lt;H&gt;","synthetic":false,"types":[]},{"text":"impl Default for TrieStream","synthetic":false,"types":[]},{"text":"impl&lt;H:&nbsp;Default&gt; Default for Layout&lt;H&gt;","synthetic":false,"types":[]}];
implementors["sp_version"] = [{"text":"impl Default for RuntimeVersion","synthetic":false,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T:&nbsp;?Sized + Default&gt; Default for Mutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Default&gt; Default for RwLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["string"] = [{"text":"impl&lt;T&gt; Default for String&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default + StableAsRef,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Default for Underscore","synthetic":false,"types":[]},{"text":"impl Default for Abstract","synthetic":false,"types":[]},{"text":"impl Default for As","synthetic":false,"types":[]},{"text":"impl Default for Async","synthetic":false,"types":[]},{"text":"impl Default for Auto","synthetic":false,"types":[]},{"text":"impl Default for Await","synthetic":false,"types":[]},{"text":"impl Default for Become","synthetic":false,"types":[]},{"text":"impl Default for Box","synthetic":false,"types":[]},{"text":"impl Default for Break","synthetic":false,"types":[]},{"text":"impl Default for Const","synthetic":false,"types":[]},{"text":"impl Default for Continue","synthetic":false,"types":[]},{"text":"impl Default for Crate","synthetic":false,"types":[]},{"text":"impl Default for Default","synthetic":false,"types":[]},{"text":"impl Default for Do","synthetic":false,"types":[]},{"text":"impl Default for Dyn","synthetic":false,"types":[]},{"text":"impl Default for Else","synthetic":false,"types":[]},{"text":"impl Default for Enum","synthetic":false,"types":[]},{"text":"impl Default for Extern","synthetic":false,"types":[]},{"text":"impl Default for Final","synthetic":false,"types":[]},{"text":"impl Default for Fn","synthetic":false,"types":[]},{"text":"impl Default for For","synthetic":false,"types":[]},{"text":"impl Default for If","synthetic":false,"types":[]},{"text":"impl Default for Impl","synthetic":false,"types":[]},{"text":"impl Default for In","synthetic":false,"types":[]},{"text":"impl Default for Let","synthetic":false,"types":[]},{"text":"impl Default for Loop","synthetic":false,"types":[]},{"text":"impl Default for Macro","synthetic":false,"types":[]},{"text":"impl Default for Match","synthetic":false,"types":[]},{"text":"impl Default for Mod","synthetic":false,"types":[]},{"text":"impl Default for Move","synthetic":false,"types":[]},{"text":"impl Default for Mut","synthetic":false,"types":[]},{"text":"impl Default for Override","synthetic":false,"types":[]},{"text":"impl Default for Priv","synthetic":false,"types":[]},{"text":"impl Default for Pub","synthetic":false,"types":[]},{"text":"impl Default for Ref","synthetic":false,"types":[]},{"text":"impl Default for Return","synthetic":false,"types":[]},{"text":"impl Default for SelfType","synthetic":false,"types":[]},{"text":"impl Default for SelfValue","synthetic":false,"types":[]},{"text":"impl Default for Static","synthetic":false,"types":[]},{"text":"impl Default for Struct","synthetic":false,"types":[]},{"text":"impl Default for Super","synthetic":false,"types":[]},{"text":"impl Default for Trait","synthetic":false,"types":[]},{"text":"impl Default for Try","synthetic":false,"types":[]},{"text":"impl Default for Type","synthetic":false,"types":[]},{"text":"impl Default for Typeof","synthetic":false,"types":[]},{"text":"impl Default for Union","synthetic":false,"types":[]},{"text":"impl Default for Unsafe","synthetic":false,"types":[]},{"text":"impl Default for Unsized","synthetic":false,"types":[]},{"text":"impl Default for Use","synthetic":false,"types":[]},{"text":"impl Default for Virtual","synthetic":false,"types":[]},{"text":"impl Default for Where","synthetic":false,"types":[]},{"text":"impl Default for While","synthetic":false,"types":[]},{"text":"impl Default for Yield","synthetic":false,"types":[]},{"text":"impl Default for Add","synthetic":false,"types":[]},{"text":"impl Default for AddEq","synthetic":false,"types":[]},{"text":"impl Default for And","synthetic":false,"types":[]},{"text":"impl Default for AndAnd","synthetic":false,"types":[]},{"text":"impl Default for AndEq","synthetic":false,"types":[]},{"text":"impl Default for At","synthetic":false,"types":[]},{"text":"impl Default for Bang","synthetic":false,"types":[]},{"text":"impl Default for Caret","synthetic":false,"types":[]},{"text":"impl Default for CaretEq","synthetic":false,"types":[]},{"text":"impl Default for Colon","synthetic":false,"types":[]},{"text":"impl Default for Colon2","synthetic":false,"types":[]},{"text":"impl Default for Comma","synthetic":false,"types":[]},{"text":"impl Default for Div","synthetic":false,"types":[]},{"text":"impl Default for DivEq","synthetic":false,"types":[]},{"text":"impl Default for Dollar","synthetic":false,"types":[]},{"text":"impl Default for Dot","synthetic":false,"types":[]},{"text":"impl Default for Dot2","synthetic":false,"types":[]},{"text":"impl Default for Dot3","synthetic":false,"types":[]},{"text":"impl Default for DotDotEq","synthetic":false,"types":[]},{"text":"impl Default for Eq","synthetic":false,"types":[]},{"text":"impl Default for EqEq","synthetic":false,"types":[]},{"text":"impl Default for Ge","synthetic":false,"types":[]},{"text":"impl Default for Gt","synthetic":false,"types":[]},{"text":"impl Default for Le","synthetic":false,"types":[]},{"text":"impl Default for Lt","synthetic":false,"types":[]},{"text":"impl Default for MulEq","synthetic":false,"types":[]},{"text":"impl Default for Ne","synthetic":false,"types":[]},{"text":"impl Default for Or","synthetic":false,"types":[]},{"text":"impl Default for OrEq","synthetic":false,"types":[]},{"text":"impl Default for OrOr","synthetic":false,"types":[]},{"text":"impl Default for Pound","synthetic":false,"types":[]},{"text":"impl Default for Question","synthetic":false,"types":[]},{"text":"impl Default for RArrow","synthetic":false,"types":[]},{"text":"impl Default for LArrow","synthetic":false,"types":[]},{"text":"impl Default for Rem","synthetic":false,"types":[]},{"text":"impl Default for RemEq","synthetic":false,"types":[]},{"text":"impl Default for FatArrow","synthetic":false,"types":[]},{"text":"impl Default for Semi","synthetic":false,"types":[]},{"text":"impl Default for Shl","synthetic":false,"types":[]},{"text":"impl Default for ShlEq","synthetic":false,"types":[]},{"text":"impl Default for Shr","synthetic":false,"types":[]},{"text":"impl Default for ShrEq","synthetic":false,"types":[]},{"text":"impl Default for Star","synthetic":false,"types":[]},{"text":"impl Default for Sub","synthetic":false,"types":[]},{"text":"impl Default for SubEq","synthetic":false,"types":[]},{"text":"impl Default for Tilde","synthetic":false,"types":[]},{"text":"impl Default for Brace","synthetic":false,"types":[]},{"text":"impl Default for Bracket","synthetic":false,"types":[]},{"text":"impl Default for Paren","synthetic":false,"types":[]},{"text":"impl Default for Group","synthetic":false,"types":[]},{"text":"impl Default for Generics","synthetic":false,"types":[]},{"text":"impl Default for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Default for PathArguments","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Default for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
implementors["target_lexicon"] = [{"text":"impl Default for Triple","synthetic":false,"types":[]},{"text":"impl Default for Architecture","synthetic":false,"types":[]},{"text":"impl Default for Vendor","synthetic":false,"types":[]},{"text":"impl Default for OperatingSystem","synthetic":false,"types":[]},{"text":"impl Default for Environment","synthetic":false,"types":[]},{"text":"impl Default for BinaryFormat","synthetic":false,"types":[]}];
implementors["tempfile"] = [{"text":"impl&lt;'a, 'b&gt; Default for Builder&lt;'a, 'b&gt;","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Default for ColorSpec","synthetic":false,"types":[]}];
implementors["thread_local"] = [{"text":"impl&lt;T:&nbsp;Send&gt; Default for CachedThreadLocal&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Default for ThreadLocal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["threadpool"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for ThreadPool","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Default for ArrayVec&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'s, T&gt; Default for SliceVec&lt;'s, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Default for TinyVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["tokio"] = [{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Default, V:&nbsp;Default&gt; Default for StreamMap&lt;K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for Notify","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Default for RwLock&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for DelayQueue&lt;T&gt;","synthetic":false,"types":[]}];
implementors["tokio_buf"] = [{"text":"impl Default for SizeHint","synthetic":false,"types":[]}];
implementors["tokio_executor"] = [{"text":"impl Default for ParkThread","synthetic":false,"types":[]}];
implementors["tokio_reactor"] = [{"text":"impl Default for Handle","synthetic":false,"types":[]}];
implementors["tokio_sync"] = [{"text":"impl&lt;T&gt; Default for Mutex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for Permit","synthetic":false,"types":[]},{"text":"impl Default for AtomicWaker","synthetic":false,"types":[]}];
implementors["tokio_timer"] = [{"text":"impl Default for Clock","synthetic":false,"types":[]},{"text":"impl Default for Handle","synthetic":false,"types":[]},{"text":"impl Default for Timer&lt;ParkThread, SystemNow&gt;","synthetic":false,"types":[]}];
implementors["tokio_util"] = [{"text":"impl Default for BytesCodec","synthetic":false,"types":[]},{"text":"impl Default for LengthDelimitedCodec","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for LinesCodec","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Default for Map&lt;String, Value&gt;","synthetic":false,"types":[]}];
implementors["tracing_core"] = [{"text":"impl Default for Dispatch","synthetic":false,"types":[]}];
implementors["tracing_log"] = [{"text":"impl Default for LogTracer","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for Builder","synthetic":false,"types":[]},{"text":"impl Default for TraceLogger","synthetic":false,"types":[]}];
implementors["tracing_subscriber"] = [{"text":"impl Default for Directive","synthetic":false,"types":[]},{"text":"impl Default for EnvFilter","synthetic":false,"types":[]},{"text":"impl&lt;S&gt; Default for Layer&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Default&gt; Default for FormattedFields&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Default for Json","synthetic":false,"types":[]},{"text":"impl Default for JsonFields","synthetic":false,"types":[]},{"text":"impl Default for Pretty","synthetic":false,"types":[]},{"text":"impl Default for Compact","synthetic":false,"types":[]},{"text":"impl Default for Full","synthetic":false,"types":[]},{"text":"impl Default for Format&lt;Full, SystemTime&gt;","synthetic":false,"types":[]},{"text":"impl Default for DefaultFields","synthetic":false,"types":[]},{"text":"impl Default for SystemTime","synthetic":false,"types":[]},{"text":"impl Default for Uptime","synthetic":false,"types":[]},{"text":"impl Default for ChronoUtc","synthetic":false,"types":[]},{"text":"impl Default for ChronoLocal","synthetic":false,"types":[]},{"text":"impl Default for TestWriter","synthetic":false,"types":[]},{"text":"impl Default for Subscriber","synthetic":false,"types":[]},{"text":"impl Default for SubscriberBuilder","synthetic":false,"types":[]},{"text":"impl Default for Identity","synthetic":false,"types":[]},{"text":"impl Default for Registry","synthetic":false,"types":[]},{"text":"impl Default for CurrentSpan","synthetic":false,"types":[]}];
implementors["trie_db"] = [{"text":"impl&lt;HO:&nbsp;Copy&gt; Default for Recorder&lt;HO&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H, HO&gt; Default for TrieRoot&lt;H, HO&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H&gt; Default for TrieRootUnhashed&lt;H&gt;","synthetic":false,"types":[]},{"text":"impl&lt;H, HO&gt; Default for TrieRootPrint&lt;H, HO&gt;","synthetic":false,"types":[]},{"text":"impl Default for NibbleVec","synthetic":false,"types":[]},{"text":"impl Default for TrieSpec","synthetic":false,"types":[]},{"text":"impl&lt;L:&nbsp;Default + TrieLayout&gt; Default for TrieFactory&lt;L&gt;","synthetic":false,"types":[]}];
implementors["try_lock"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for TryLock&lt;T&gt;","synthetic":false,"types":[]}];
implementors["twox_hash"] = [{"text":"impl Default for XxHash64","synthetic":false,"types":[]},{"text":"impl Default for XxHash32","synthetic":false,"types":[]},{"text":"impl Default for Hash64","synthetic":false,"types":[]},{"text":"impl Default for Hash128","synthetic":false,"types":[]},{"text":"impl Default for RandomXxHashBuilder64","synthetic":false,"types":[]},{"text":"impl Default for RandomXxHashBuilder32","synthetic":false,"types":[]},{"text":"impl Default for RandomHashBuilder64","synthetic":false,"types":[]},{"text":"impl Default for RandomHashBuilder128","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Default for B0","synthetic":false,"types":[]},{"text":"impl Default for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default + Unsigned + NonZero&gt; Default for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default + Unsigned + NonZero&gt; Default for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Default for Z0","synthetic":false,"types":[]},{"text":"impl Default for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Default, B:&nbsp;Default&gt; Default for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Default for Greater","synthetic":false,"types":[]},{"text":"impl Default for Less","synthetic":false,"types":[]},{"text":"impl Default for Equal","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S:&nbsp;Default&gt; Default for Ascii&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;AsRef&lt;str&gt; + Default&gt; Default for UniCase&lt;S&gt;","synthetic":false,"types":[]}];
implementors["universal_hash"] = [{"text":"impl Default for Error","synthetic":false,"types":[]}];
implementors["unsigned_varint"] = [{"text":"impl&lt;T:&nbsp;Default&gt; Default for Uvi&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Default for UviBytes&lt;T&gt;","synthetic":false,"types":[]}];
implementors["vec_arena"] = [{"text":"impl&lt;T&gt; Default for Arena&lt;T&gt;","synthetic":false,"types":[]}];
implementors["vec_map"] = [{"text":"impl&lt;V&gt; Default for VecMap&lt;V&gt;","synthetic":false,"types":[]}];
implementors["wasm_bindgen_backend"] = [{"text":"impl Default for Program","synthetic":false,"types":[]}];
implementors["wasm_bindgen_macro_support"] = [{"text":"impl Default for BindgenAttrs","synthetic":false,"types":[]}];
implementors["wasm_timer"] = [{"text":"impl Default for TimerHandle","synthetic":false,"types":[]}];
implementors["wasmi"] = [{"text":"impl&lt;'a&gt; Default for ImportsBuilder&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Default for StackRecycler","synthetic":false,"types":[]}];
implementors["wasmi_validation"] = [{"text":"impl Default for ModuleContext","synthetic":false,"types":[]},{"text":"impl Default for ModuleContextBuilder","synthetic":false,"types":[]}];
implementors["wasmparser"] = [{"text":"impl Default for Parser","synthetic":false,"types":[]},{"text":"impl Default for Validator","synthetic":false,"types":[]}];
implementors["wasmtime"] = [{"text":"impl Default for Config","synthetic":false,"types":[]},{"text":"impl Default for Engine","synthetic":false,"types":[]},{"text":"impl Default for Store","synthetic":false,"types":[]}];
implementors["wasmtime_environ"] = [{"text":"impl Default for Tunables","synthetic":false,"types":[]},{"text":"impl Default for TrapSink","synthetic":false,"types":[]}];
implementors["wasmtime_jit"] = [{"text":"impl Default for TrampolineRelocSink","synthetic":false,"types":[]}];
implementors["wasmtime_profiling"] = [{"text":"impl Default for NullProfilerAgent","synthetic":false,"types":[]}];
implementors["wasmtime_runtime"] = [{"text":"impl Default for StackMapRegistry","synthetic":false,"types":[]},{"text":"impl Default for SignatureRegistry","synthetic":false,"types":[]},{"text":"impl Default for VMSharedSignatureIndex","synthetic":false,"types":[]},{"text":"impl Default for VMInterrupts","synthetic":false,"types":[]}];
implementors["wast"] = [{"text":"impl&lt;'a&gt; Default for Names&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for FunctionType&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for FunctionTypeNoNames&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for ModuleType&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Default for InstanceType&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["yamux"] = [{"text":"impl Default for Config","synthetic":false,"types":[]}];
implementors["zstd"] = [{"text":"impl Default for Compressor","synthetic":false,"types":[]},{"text":"impl Default for Decompressor","synthetic":false,"types":[]}];
implementors["zstd_safe"] = [{"text":"impl&lt;'a&gt; Default for CCtx&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'_&gt; Default for DCtx&lt;'_&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
(function() {var implementors = {};
implementors["cranelift_codegen"] = [{"text":"impl EntityRef for Block","synthetic":false,"types":[]},{"text":"impl EntityRef for Value","synthetic":false,"types":[]},{"text":"impl EntityRef for Inst","synthetic":false,"types":[]},{"text":"impl EntityRef for StackSlot","synthetic":false,"types":[]},{"text":"impl EntityRef for GlobalValue","synthetic":false,"types":[]},{"text":"impl EntityRef for Constant","synthetic":false,"types":[]},{"text":"impl EntityRef for Immediate","synthetic":false,"types":[]},{"text":"impl EntityRef for JumpTable","synthetic":false,"types":[]},{"text":"impl EntityRef for FuncRef","synthetic":false,"types":[]},{"text":"impl EntityRef for SigRef","synthetic":false,"types":[]},{"text":"impl EntityRef for Heap","synthetic":false,"types":[]},{"text":"impl EntityRef for Table","synthetic":false,"types":[]},{"text":"impl EntityRef for ValueLabel","synthetic":false,"types":[]},{"text":"impl EntityRef for RegClassIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for Loop","synthetic":false,"types":[]}];
implementors["cranelift_frontend"] = [{"text":"impl EntityRef for Variable","synthetic":false,"types":[]}];
implementors["cranelift_wasm"] = [{"text":"impl EntityRef for FuncIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for DefinedFuncIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for DefinedTableIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for DefinedMemoryIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for DefinedGlobalIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for TableIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for GlobalIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for MemoryIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for SignatureIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for DataIndex","synthetic":false,"types":[]},{"text":"impl EntityRef for ElemIndex","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
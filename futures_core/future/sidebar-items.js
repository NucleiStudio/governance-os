initSidebarItems({"struct":[["FutureObj","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + Send + 'a>`."],["LocalFutureObj","A custom trait object for polling futures, roughly akin to `Box<dyn Future<Output = T> + 'a>`."]],"trait":[["FusedFuture","A future which tracks whether or not the underlying future should no longer be polled."],["Future","A future represents an asynchronous computation."],["TryFuture","A convenience for futures that return `Result` values that includes a variety of adapters tailored to such futures."],["UnsafeFutureObj","A custom implementation of a future trait object for `FutureObj`, providing a vtable with drop support."]],"type":[["BoxFuture","An owned dynamically typed [`Future`] for use in cases where you can't statically type your result or need to add some indirection."],["LocalBoxFuture","`BoxFuture`, but without the `Send` requirement."]]});
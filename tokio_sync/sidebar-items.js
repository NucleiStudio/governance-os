initSidebarItems({"mod":[["mpsc","A multi-producer, single-consumer queue for sending values across asynchronous tasks."],["oneshot","A channel for sending a single message between asynchronous tasks."],["semaphore","Thread-safe, asynchronous counting semaphore."],["watch","A single-producer, multi-consumer channel that only retains the last sent value."]],"struct":[["AtomicWaker","A synchronization primitive for task waking."],["Barrier","A barrier enables multiple threads to synchronize the beginning of some computation."],["BarrierWaitResult","A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused."],["Mutex","An asynchronous mutual exclusion primitive useful for protecting shared data"],["MutexGuard","A handle to a held `Mutex`."]]});
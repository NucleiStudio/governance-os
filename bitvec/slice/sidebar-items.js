initSidebarItems({"fn":[["bits_from_raw_parts","Forms a `BitSlice` from a pointer, starting position, and length."],["bits_from_raw_parts_mut","Performs the same functionality as `bits_from_raw_parts`, except that a mutable slice is returned."],["from_mut","Converts a reference to `T` into a `BitSlice` of that element (without copying)."],["from_raw_parts","Forms a bit slice from a pointer and a length."],["from_raw_parts_mut","Performs the same functionality as `from_raw_parts`, except that a mutable slice is returned."],["from_ref","Converts a reference to `T` into a bit slice one element long (without copying)."]],"struct":[["BitMut","Proxy referential type, equivalent to `&mut bool`."],["BitSlice","A compact slice of bits, whose order and storage types can be customized."],["Chunks","An iterator over a slice in (non-overlapping) chunks (`width` bits at a time), starting at the beginning of the slice."],["ChunksExact","An iterator over a slice in (non-overlapping) chunks (`width` bits at a time), starting at the beginning of the slice."],["ChunksExactMut","An iterator over a slice in (non-ovelapping) mutable chunks (`width` bits at a time), starting at the beginning of the slice."],["ChunksMut","An iterator over a slice in (non-overlapping) mutable chunks (`width` bits at a time), starting at the beginning of the slice."],["Iter","Immutable slice iterator"],["IterMut","Mutable slice iterator."],["RChunks","An iterator over a slice in (non-overlapping) chunks (`width` bits at a time), starting at the end of the slice."],["RChunksExact","An iterator over a slice in (non-overlapping) chunks (`width` bits at a time), starting at the end of the slice."],["RChunksExactMut","An iterator over a slice in (non-overlapping) mutable chunks (`width` bits at a time), starting at the end of the slice."],["RChunksMut","An iterator over a slice in (non-overlapping) mutable chunks (`width` bits at a time), starting at the end of the slice."],["RSplit","An iterator over subslices separated by bits that satisfy a predicate function, starting from the end of the slice."],["RSplitMut","An iterator over subslices separated by bits that satisfy a predicate function, starting from the end of the slice."],["RSplitN","An iterator over subslices separated by positions that satisfy a predicate function, limited to a given number of splits, starting from the end of the slice."],["RSplitNMut","An iterator over mutable subslices separated by positions that satisfy a predicate function, limited to a given number of splits, starting from the end of the slice."],["Split","An iterator over subslices separated by bits that satisfy a predicate function."],["SplitMut","An iterator over subslices separated by positions that satisfy a predicate function."],["SplitN","An iterator over subslices separated by positions that satisfy a predicate function, limited to a given number of splits."],["SplitNMut","An iterator over mutable subslices separated by positions that satisfy a predicate function, limited to a given number of splits."],["Windows","An iterator over overlapping subslices of some width."]],"trait":[["AsBits","Allows a type to be used as a sequence of immutable bits."],["BitSliceIndex","Replacement for `slice::SliceIndex`."]]});
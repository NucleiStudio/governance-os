initSidebarItems({"enum":[["Call","Dispatchable calls."],["Error","Error for the System module"],["InitKind","A type of block initialization to perform."],["Phase","A phase of a block's execution."],["RawEvent","Events for this module."],["RawOrigin","Origin for the System module."],["RefStatus","Reference status; can be either referenced or unreferenced."]],"fn":[["ensure_none","Ensure that the origin `o` represents an unsigned extrinsic. Returns `Ok` or an `Err` otherwise."],["ensure_root","Ensure that the origin `o` represents the root. Returns `Ok` or an `Err` otherwise."],["ensure_signed","Ensure that the origin `o` represents a signed extrinsic (i.e. transaction). Returns `Ok` with the account that signed the extrinsic or an `Err` otherwise."],["extrinsics_data_root","Compute the trie root of a list of extrinsics."],["extrinsics_root","Compute the trie root of a list of extrinsics."],["split_inner","Split an `option` into two constituent options, as defined by a `splitter` function."]],"mod":[["offchain","Module helpers for off-chain calls."]],"struct":[["Account","The full account information for a particular account ID."],["AccountInfo","Information of an account."],["BlockHash","Map of block numbers to block hashes."],["CallKillAccount","Event handler which calls kill_account when it happens."],["CallOnCreatedAccount","Event handler which calls on_created_account when it happens."],["ChainContext",""],["CheckEra","Check for transaction mortality."],["CheckGenesis","Genesis hash check to provide replay protection between different networks."],["CheckMortality","Check for transaction mortality."],["CheckNonce","Nonce check and increment to give replay protection for transactions."],["CheckSpecVersion","Ensure the runtime version registered in the transaction is the same as at present."],["CheckTxVersion","Ensure the transaction version registered in the transaction is the same as at present."],["CheckWeight","Block resource (weight) limit check."],["EnsureNever",""],["EnsureNone",""],["EnsureOneOf","The \"OR gate\" implementation of `EnsureOrigin`."],["EnsureRoot",""],["EnsureSigned",""],["EnsureSignedBy",""],["EventRecord","Record of an event happening."],["GenesisConfig","Genesis config for the module, allow to build genesis storage."],["LastRuntimeUpgrade","Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."],["LastRuntimeUpgradeInfo","Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."],["Module",""]],"trait":[["Trait",""],["WeightInfo",""]],"type":[["DigestItemOf",""],["DigestOf",""],["Event","`RawEvent` specialized for the configuration `Trait`"],["Key",""],["KeyValue",""],["Origin","Exposed trait-generic origin type."],["RefCount","Type used to encode the number of references an account has."]]});